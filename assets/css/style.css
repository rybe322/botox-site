/* Box Model Hack */
* {
  box-sizing: border-box;
}

/* Clear fix hack */
.clearfix:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.clear {
  clear: both;
}

/******************************************
/* BASE STYLES
/*******************************************/

body {
}

/******************************************
/* ADDITIONAL STYLES
/*******************************************/
:root {
  --ratio: 1.5;
  --s-5: calc(var(--s-4) / var(--ratio));
  --s-4: calc(var(--s-3) / var(--ratio));
  --s-3: calc(var(--s-2) / var(--ratio));
  --s-2: calc(var(--s-1) / var(--ratio));
  --s-1: calc(var(--s0) / var(--ratio));
  --s0: 1rem;
  --s1: calc(var(--s0) * var(--ratio));
  --s2: calc(var(--s1) * var(--ratio));
  --s3: calc(var(--s2) * var(--ratio));
  --s4: calc(var(--s3) * var(--ratio));
  --s5: calc(var(--s4) * var(--ratio));
}
html {
  font-size: 62.5%;
}
:root {
  --measure: 60ch;
  --space: var(var(--measure));
}

/*
STACK
*/
.stack {
  /* ↓ The flex context */
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}
.stack > * {
  /* ↓ Any extant vertical margins are removed */
  margin-block: 0;
}
.stack > * + * {
  /* ↓ Top margin is only applied to successive elements */
  margin-block-start: var(--space, 1.5rem);
}
/*
BOX
*/
.box {
  /* ↓ Padding set to the first point on the modular scale */
  padding: var(--s1);
  /* ↓ Assumes you have a --border-thin var */
  /* border: var(--border-thin) solid; */
  /* ↓ Always apply the transparent outline, for high contrast mode */
  outline: var(--border-thin) transparent;
  outline-offset: calc(var(--border-thin) * -1);
  /* ↓ The light and dark color vars */
  --color-light: #fff;
  --color-dark: #000;
  color: var(--color-dark);
  background-color: var(--color-light);
}
.box * {
  /* ↓ Force colors to inherit from the parent
  and honor inversion (below) */
  color: inherit;
}
.box.invert {
  /* ↓ The color vars inverted */
  color: var(--color-light);
  background-color: var(--color-dark);
}
.box {
  /* border: 1px solid black; */
}

/*
CLUSTER
*/
.cluster {
  /* ↓ Set the Flexbox context */
  display: flex;
  /* ↓ Enable wrapping */
  flex-wrap: wrap;
  /* ↓ Set the space/gap */
  gap: var(--space, 1rem);
  /* ↓ Choose your justification (flex-start is default) */
  justify-content: center;
  /* ↓ Choose your alignment (flex-start is default) */
  align-items: center;
}
.cluster :first-child {
  /* margin-inline-end: auto; */
}
/*
HEADER
*/

.switcher {
  display: flex;
  flex-wrap: wrap;
  /* ↓ The default value is the first point on the modular scale */
  /* gap: var(--gutter, var(--s1)); */
  /* ↓ The width at which the layout “breaks” */
  --threshold: 60rem;
}
.switcher > * {
  /* ↓ Allow children to grow */
  flex-grow: 1;
  /* ↓ Switch the layout at the --threshold */
  flex-basis: calc((var(--threshold) - 100%) * 999);
}
/*
CENTER
*/
.center {
  /* ↓ Remove padding from the width calculation */
  box-sizing: content-box;
  /* ↓ The maximum width is the maximum measure */
  /* ↓ Only affect horizontal margins */
  margin-inline: auto;
  /* ↓ Apply the minimum horizontal space */
  padding-inline-start: var(--s1);
  padding-inline-end: var(--s1);
}

.container {
  max-width: 90vw;
  margin-inline: auto;
}

body * {
  border: none;
}
h1 {
  font-size: var(--s5);
  text-align: center;
}
p {
  font-size: var(--s2);
  min-inline-size: 20ch;
}
nav {
  font-size: var(--s2);
}
.button {
  font-size: var(--s3);
}
ul {
  list-style: none;
  margin: 0;
}
a {
  text-decoration: none;
}
nav ul :first-child {
  /* margin-inline-end: auto; */
}
/*
FRAME
*/
.frame {
  --n: 16; /* numerator */
  --d: 9; /* denominator */
  aspect-ratio: var(--n) / var(--d);
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}
.frame > img,
.frame > video {
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;
}
